// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230313134030_Add_Organizations_Users_Models")]
    partial class Add_Organizations_Users_Models
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2059a7d3-7397-44db-b721-63fcaa3831a8"),
                            ContentTypeId = new Guid("743bfcb1-eea9-49a9-90d3-f8cbb966b46f"),
                            Name = "Creator",
                            Type = 0,
                            Value = "Regixx"
                        },
                        new
                        {
                            Id = new Guid("a0378342-9893-449b-827a-f5ccc398ac52"),
                            ContentTypeId = new Guid("743bfcb1-eea9-49a9-90d3-f8cbb966b46f"),
                            Name = "TrailerVideo",
                            Type = 4,
                            Value = "http://"
                        },
                        new
                        {
                            Id = new Guid("c99e4033-e431-417c-982e-628e2b6fdd93"),
                            ContentTypeId = new Guid("5c15c80f-a116-4e93-ba00-a5fdfc18316d"),
                            Name = "DescriptionText",
                            Type = 0,
                            Value = "Best game ever"
                        },
                        new
                        {
                            Id = new Guid("c10d27f6-0eb7-4d0a-9147-0b2628431a8c"),
                            ContentTypeId = new Guid("cba40273-e7a9-4997-b60f-bc209197afad"),
                            Name = "Name",
                            Type = 0,
                            Value = "Star Wars"
                        },
                        new
                        {
                            Id = new Guid("e54ebe42-c373-497c-9ae7-7866172dbe33"),
                            ContentTypeId = new Guid("cba40273-e7a9-4997-b60f-bc209197afad"),
                            Name = "Year",
                            Type = 1,
                            Value = "2007"
                        },
                        new
                        {
                            Id = new Guid("c08d53af-ff91-4af2-843c-21ea9b60c256"),
                            ContentTypeId = new Guid("22539efa-196c-4c6c-b734-ab70d0622289"),
                            Name = "Name",
                            Type = 0,
                            Value = "Santa Monica"
                        },
                        new
                        {
                            Id = new Guid("302f60d0-7844-4bb9-97c3-92f1545b2d6c"),
                            ContentTypeId = new Guid("22539efa-196c-4c6c-b734-ab70d0622289"),
                            Name = "Location",
                            Type = 0,
                            Value = "USA"
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SysId");

                    b.ToTable("ContentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("743bfcb1-eea9-49a9-90d3-f8cbb966b46f"),
                            Name = "Trailer",
                            SpaceId = new Guid("b641fb17-bb04-4edb-b7fa-d615185b74ea")
                        },
                        new
                        {
                            Id = new Guid("5c15c80f-a116-4e93-ba00-a5fdfc18316d"),
                            Name = "Description",
                            SpaceId = new Guid("b641fb17-bb04-4edb-b7fa-d615185b74ea")
                        },
                        new
                        {
                            Id = new Guid("cba40273-e7a9-4997-b60f-bc209197afad"),
                            Name = "Game",
                            SpaceId = new Guid("b641fb17-bb04-4edb-b7fa-d615185b74ea")
                        },
                        new
                        {
                            Id = new Guid("22539efa-196c-4c6c-b734-ab70d0622289"),
                            Name = "Publisher",
                            SpaceId = new Guid("b641fb17-bb04-4edb-b7fa-d615185b74ea")
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("ContentTypeReferences");

                    b.HasData(
                        new
                        {
                            ParentId = new Guid("5c15c80f-a116-4e93-ba00-a5fdfc18316d"),
                            ChildId = new Guid("743bfcb1-eea9-49a9-90d3-f8cbb966b46f")
                        },
                        new
                        {
                            ParentId = new Guid("cba40273-e7a9-4997-b60f-bc209197afad"),
                            ChildId = new Guid("5c15c80f-a116-4e93-ba00-a5fdfc18316d")
                        },
                        new
                        {
                            ParentId = new Guid("cba40273-e7a9-4997-b60f-bc209197afad"),
                            ChildId = new Guid("22539efa-196c-4c6c-b734-ab70d0622289")
                        });
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9dc8d01c-55af-4a90-aaa5-c2970a11b00e"),
                            Name = "Org1"
                        });
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Spaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b641fb17-bb04-4edb-b7fa-d615185b74ea"),
                            Name = "Game shop",
                            OrganizationId = new Guid("9dc8d01c-55af-4a90-aaa5-c2970a11b00e")
                        });
                });

            modelBuilder.Entity("CMS.Model.Sys", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstPublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b9407df-056c-4472-8830-e3589ed6404a"),
                            OrganizationId = new Guid("9dc8d01c-55af-4a90-aaa5-c2970a11b00e"),
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ContentType")
                        .WithMany("BasicFields")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentType");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.HasOne("CMS.Model.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.Navigation("Sys");
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ChildEntity")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CMS.Model.ContentType", "ParentEntity")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildEntity");

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("Spaces")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Navigation("BasicFields");

                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Navigation("Spaces");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
