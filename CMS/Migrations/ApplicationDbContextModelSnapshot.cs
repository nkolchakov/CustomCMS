// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.ToTable("Fields", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("86e63aa5-7c6f-44fc-9f4e-751db94d1de8"),
                            ContentTypeId = new Guid("0d513b47-e6de-4904-a9bb-406d3e9aee64"),
                            Name = "Creator",
                            Type = 0,
                            Value = "Regixx"
                        },
                        new
                        {
                            Id = new Guid("5a7b35b8-8a50-4ebe-bd45-6fcc898310cb"),
                            ContentTypeId = new Guid("0d513b47-e6de-4904-a9bb-406d3e9aee64"),
                            Name = "TrailerVideo",
                            Type = 4,
                            Value = "http://"
                        },
                        new
                        {
                            Id = new Guid("57edbac4-cf73-4921-8659-df7d7e3dd4d5"),
                            ContentTypeId = new Guid("1f9fc060-33a5-4366-8737-f2e780ea636f"),
                            Name = "DescriptionText",
                            Type = 0,
                            Value = "Best game ever"
                        },
                        new
                        {
                            Id = new Guid("19ec003e-b9f7-4dbf-b5f3-d9da0d45a4ad"),
                            ContentTypeId = new Guid("30e192bc-0551-46e2-8582-ca61a99c5593"),
                            Name = "Name",
                            Type = 0,
                            Value = "Star Wars"
                        },
                        new
                        {
                            Id = new Guid("1a8522dc-f1cc-4198-b8e9-4cf645bcf21e"),
                            ContentTypeId = new Guid("30e192bc-0551-46e2-8582-ca61a99c5593"),
                            Name = "Year",
                            Type = 1,
                            Value = "2007"
                        },
                        new
                        {
                            Id = new Guid("be9d2b26-075a-45dd-a990-7e7accb8d0ce"),
                            ContentTypeId = new Guid("1716251e-a55a-43d6-b347-dcec5194f10b"),
                            Name = "Name",
                            Type = 0,
                            Value = "Santa Monica"
                        },
                        new
                        {
                            Id = new Guid("988b904f-5c11-49a5-b79a-ffcb1e74ae16"),
                            ContentTypeId = new Guid("1716251e-a55a-43d6-b347-dcec5194f10b"),
                            Name = "Location",
                            Type = 0,
                            Value = "USA"
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SysId");

                    b.ToTable("ContentTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d513b47-e6de-4904-a9bb-406d3e9aee64"),
                            Name = "Trailer",
                            SpaceId = new Guid("03c637a2-1965-4fc5-9992-7a0e921faf0d")
                        },
                        new
                        {
                            Id = new Guid("1f9fc060-33a5-4366-8737-f2e780ea636f"),
                            Name = "Description",
                            SpaceId = new Guid("03c637a2-1965-4fc5-9992-7a0e921faf0d")
                        },
                        new
                        {
                            Id = new Guid("30e192bc-0551-46e2-8582-ca61a99c5593"),
                            Name = "Game",
                            SpaceId = new Guid("03c637a2-1965-4fc5-9992-7a0e921faf0d")
                        },
                        new
                        {
                            Id = new Guid("1716251e-a55a-43d6-b347-dcec5194f10b"),
                            Name = "Publisher",
                            SpaceId = new Guid("03c637a2-1965-4fc5-9992-7a0e921faf0d")
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("ContentTypeReferences", (string)null);

                    b.HasData(
                        new
                        {
                            ParentId = new Guid("1f9fc060-33a5-4366-8737-f2e780ea636f"),
                            ChildId = new Guid("0d513b47-e6de-4904-a9bb-406d3e9aee64")
                        },
                        new
                        {
                            ParentId = new Guid("30e192bc-0551-46e2-8582-ca61a99c5593"),
                            ChildId = new Guid("1f9fc060-33a5-4366-8737-f2e780ea636f")
                        },
                        new
                        {
                            ParentId = new Guid("30e192bc-0551-46e2-8582-ca61a99c5593"),
                            ChildId = new Guid("1716251e-a55a-43d6-b347-dcec5194f10b")
                        });
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Spaces", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("03c637a2-1965-4fc5-9992-7a0e921faf0d"),
                            Name = "Game shop"
                        });
                });

            modelBuilder.Entity("CMS.Model.Sys", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstPublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys", (string)null);
                });

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ContentType")
                        .WithMany("BasicFields")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentType");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.HasOne("CMS.Model.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.Navigation("Sys");
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ChildEntity")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CMS.Model.ContentType", "ParentEntity")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildEntity");

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Navigation("BasicFields");

                    b.Navigation("Children");

                    b.Navigation("Parents");
                });
#pragma warning restore 612, 618
        }
    }
}
