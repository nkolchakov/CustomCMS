// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230315110257_user_organization_many2many")]
    partial class user_organization_many2many
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1a5d785-c061-4994-95ac-71500a0c3fc1"),
                            ContentTypeId = new Guid("9a9c991d-fe02-4552-bad7-f0a3fa6a17d2"),
                            Name = "Creator",
                            Type = 0,
                            Value = "Regixx"
                        },
                        new
                        {
                            Id = new Guid("be771b67-a084-4637-9a44-24f2e7955443"),
                            ContentTypeId = new Guid("9a9c991d-fe02-4552-bad7-f0a3fa6a17d2"),
                            Name = "TrailerVideo",
                            Type = 4,
                            Value = "http://"
                        },
                        new
                        {
                            Id = new Guid("4251239a-0bf7-4b81-ad44-386b810f6e0e"),
                            ContentTypeId = new Guid("6bc81024-bd96-4626-96b1-fd15abe236e6"),
                            Name = "DescriptionText",
                            Type = 0,
                            Value = "Best game ever"
                        },
                        new
                        {
                            Id = new Guid("50626c64-3b74-425e-be8d-480f0f2363b2"),
                            ContentTypeId = new Guid("ea8b8153-c091-4f05-9da7-ae07321015f1"),
                            Name = "Name",
                            Type = 0,
                            Value = "Star Wars"
                        },
                        new
                        {
                            Id = new Guid("74c59b58-5232-4224-87a8-871041dee967"),
                            ContentTypeId = new Guid("ea8b8153-c091-4f05-9da7-ae07321015f1"),
                            Name = "Year",
                            Type = 1,
                            Value = "2007"
                        },
                        new
                        {
                            Id = new Guid("1bf45408-2f6d-40b2-821c-fc755e5a5675"),
                            ContentTypeId = new Guid("51f6bc11-b0d4-411b-b40c-3f5696ca2547"),
                            Name = "Name",
                            Type = 0,
                            Value = "Santa Monica"
                        },
                        new
                        {
                            Id = new Guid("7f35eef5-c8b6-4c20-b64c-b99c85e49f1b"),
                            ContentTypeId = new Guid("51f6bc11-b0d4-411b-b40c-3f5696ca2547"),
                            Name = "Location",
                            Type = 0,
                            Value = "USA"
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SysId");

                    b.ToTable("ContentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a9c991d-fe02-4552-bad7-f0a3fa6a17d2"),
                            Name = "Trailer",
                            SpaceId = new Guid("5bc61abe-3e4e-4e30-ab6e-ce05279c33fe")
                        },
                        new
                        {
                            Id = new Guid("6bc81024-bd96-4626-96b1-fd15abe236e6"),
                            Name = "Description",
                            SpaceId = new Guid("5bc61abe-3e4e-4e30-ab6e-ce05279c33fe")
                        },
                        new
                        {
                            Id = new Guid("ea8b8153-c091-4f05-9da7-ae07321015f1"),
                            Name = "Game",
                            SpaceId = new Guid("5bc61abe-3e4e-4e30-ab6e-ce05279c33fe")
                        },
                        new
                        {
                            Id = new Guid("51f6bc11-b0d4-411b-b40c-3f5696ca2547"),
                            Name = "Publisher",
                            SpaceId = new Guid("5bc61abe-3e4e-4e30-ab6e-ce05279c33fe")
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("ContentTypeReferences");

                    b.HasData(
                        new
                        {
                            ParentId = new Guid("6bc81024-bd96-4626-96b1-fd15abe236e6"),
                            ChildId = new Guid("9a9c991d-fe02-4552-bad7-f0a3fa6a17d2")
                        },
                        new
                        {
                            ParentId = new Guid("ea8b8153-c091-4f05-9da7-ae07321015f1"),
                            ChildId = new Guid("6bc81024-bd96-4626-96b1-fd15abe236e6")
                        },
                        new
                        {
                            ParentId = new Guid("ea8b8153-c091-4f05-9da7-ae07321015f1"),
                            ChildId = new Guid("51f6bc11-b0d4-411b-b40c-3f5696ca2547")
                        });
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32aa8d33-0050-48c0-9f13-841fca2b2364"),
                            Name = "Org1"
                        });
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Spaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5bc61abe-3e4e-4e30-ab6e-ce05279c33fe"),
                            Name = "Game shop",
                            OrganizationId = new Guid("32aa8d33-0050-48c0-9f13-841fca2b2364")
                        });
                });

            modelBuilder.Entity("CMS.Model.Sys", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstPublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9a387cd-9a6f-466a-86fa-8a4c8759c99e"),
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganizationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationUser");

                    b.HasData(
                        new
                        {
                            OrganizationId = new Guid("32aa8d33-0050-48c0-9f13-841fca2b2364"),
                            UserId = new Guid("b9a387cd-9a6f-466a-86fa-8a4c8759c99e")
                        });
                });

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ContentType")
                        .WithMany("BasicFields")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentType");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.HasOne("CMS.Model.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.Navigation("Sys");
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ChildEntity")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CMS.Model.ContentType", "ParentEntity")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildEntity");

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("Spaces")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Model.User", "User")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Navigation("BasicFields");

                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Navigation("OrganizationUser");

                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Navigation("OrganizationUser");
                });
#pragma warning restore 612, 618
        }
    }
}
