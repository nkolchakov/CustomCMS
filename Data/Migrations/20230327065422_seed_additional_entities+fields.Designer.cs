// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230327065422_seed_additional_entities+fields")]
    partial class seed_additional_entitiesfields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4dc7f691-f30a-4b39-97d9-eea4319785df"),
                            ContentTypeId = new Guid("ab0b3f5a-63b1-40fc-ae2c-0ee9bb619f06"),
                            Name = "Creator",
                            Type = 0,
                            Value = "Regixx"
                        },
                        new
                        {
                            Id = new Guid("54e15a5f-4ad6-4d3d-a2bd-b64c76bc53c5"),
                            ContentTypeId = new Guid("ab0b3f5a-63b1-40fc-ae2c-0ee9bb619f06"),
                            Name = "TrailerVideo",
                            Type = 4,
                            Value = "http://"
                        },
                        new
                        {
                            Id = new Guid("779b36db-d0bf-448d-86d9-fcd5e8e4bf5b"),
                            ContentTypeId = new Guid("cec02055-52a5-4850-93ba-021f270e202c"),
                            Name = "DescriptionText",
                            Type = 0,
                            Value = "Best game ever"
                        },
                        new
                        {
                            Id = new Guid("f92cb2c2-ad9e-4569-808d-12e003bf856d"),
                            ContentTypeId = new Guid("7042031c-f943-4bf1-8673-686bedb92229"),
                            Name = "Name",
                            Type = 0,
                            Value = "Star Wars"
                        },
                        new
                        {
                            Id = new Guid("deb9def5-a633-469a-b54e-0c6b3646cd8d"),
                            ContentTypeId = new Guid("7042031c-f943-4bf1-8673-686bedb92229"),
                            Name = "Year",
                            Type = 1,
                            Value = "2007"
                        },
                        new
                        {
                            Id = new Guid("fd8e5afe-a3ec-4b2c-8842-dc7c5b44de0b"),
                            ContentTypeId = new Guid("dc876db0-fe50-4f46-995e-402534bf3429"),
                            Name = "Name",
                            Type = 0,
                            Value = "Santa Monica"
                        },
                        new
                        {
                            Id = new Guid("a72fe275-28eb-435a-88f0-da578bcb2640"),
                            ContentTypeId = new Guid("dc876db0-fe50-4f46-995e-402534bf3429"),
                            Name = "Location",
                            Type = 0,
                            Value = "USA"
                        },
                        new
                        {
                            Id = new Guid("1dc06fdf-6cb3-404c-a496-90b3c174026d"),
                            ContentTypeId = new Guid("a0c540ec-790a-4e3d-9ec9-4adce47abdfe"),
                            Name = "indField1",
                            Type = 0,
                            Value = "value-1"
                        },
                        new
                        {
                            Id = new Guid("bb810b03-c3ab-4c78-97d2-46334c2266a4"),
                            ContentTypeId = new Guid("a0c540ec-790a-4e3d-9ec9-4adce47abdfe"),
                            Name = "indField2",
                            Type = 1,
                            Value = "4"
                        },
                        new
                        {
                            Id = new Guid("5666d2d2-9629-4d33-838c-308a77ffc85d"),
                            ContentTypeId = new Guid("1ded9adf-ed3e-402d-85fd-21de7eb8d90f"),
                            Name = "ind2Field",
                            Type = 0,
                            Value = "valueee1"
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SysId");

                    b.ToTable("ContentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab0b3f5a-63b1-40fc-ae2c-0ee9bb619f06"),
                            Name = "Trailer",
                            SpaceId = new Guid("81ceb55b-dd52-4a61-9251-f34d6803a8bd")
                        },
                        new
                        {
                            Id = new Guid("cec02055-52a5-4850-93ba-021f270e202c"),
                            Name = "Description",
                            SpaceId = new Guid("81ceb55b-dd52-4a61-9251-f34d6803a8bd")
                        },
                        new
                        {
                            Id = new Guid("7042031c-f943-4bf1-8673-686bedb92229"),
                            Name = "Game",
                            SpaceId = new Guid("81ceb55b-dd52-4a61-9251-f34d6803a8bd")
                        },
                        new
                        {
                            Id = new Guid("dc876db0-fe50-4f46-995e-402534bf3429"),
                            Name = "Publisher",
                            SpaceId = new Guid("81ceb55b-dd52-4a61-9251-f34d6803a8bd")
                        },
                        new
                        {
                            Id = new Guid("a0c540ec-790a-4e3d-9ec9-4adce47abdfe"),
                            Name = "independen 2",
                            SpaceId = new Guid("81ceb55b-dd52-4a61-9251-f34d6803a8bd")
                        },
                        new
                        {
                            Id = new Guid("1ded9adf-ed3e-402d-85fd-21de7eb8d90f"),
                            Name = "independent 3",
                            SpaceId = new Guid("81ceb55b-dd52-4a61-9251-f34d6803a8bd")
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("ContentTypeReferences");

                    b.HasData(
                        new
                        {
                            ParentId = new Guid("cec02055-52a5-4850-93ba-021f270e202c"),
                            ChildId = new Guid("ab0b3f5a-63b1-40fc-ae2c-0ee9bb619f06")
                        },
                        new
                        {
                            ParentId = new Guid("7042031c-f943-4bf1-8673-686bedb92229"),
                            ChildId = new Guid("cec02055-52a5-4850-93ba-021f270e202c")
                        },
                        new
                        {
                            ParentId = new Guid("7042031c-f943-4bf1-8673-686bedb92229"),
                            ChildId = new Guid("dc876db0-fe50-4f46-995e-402534bf3429")
                        });
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7f080b7-9749-4aaa-8d18-0ed036c89edd"),
                            Name = "Org1"
                        },
                        new
                        {
                            Id = new Guid("b706b43f-92b7-422d-8e28-35bd6bc01630"),
                            Name = "Organization 2"
                        },
                        new
                        {
                            Id = new Guid("90428e5a-3a8e-463b-bf27-71fdbedec17e"),
                            Name = "Third oorg"
                        });
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Spaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81ceb55b-dd52-4a61-9251-f34d6803a8bd"),
                            Name = "Game shop",
                            OrganizationId = new Guid("b7f080b7-9749-4aaa-8d18-0ed036c89edd")
                        });
                });

            modelBuilder.Entity("CMS.Model.Sys", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstPublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b9648c6-cbb1-4a06-86ad-e8c69a8fff51"),
                            UserRole = 0
                        },
                        new
                        {
                            Id = new Guid("42502914-030d-49eb-bea6-26bdedc64aeb"),
                            UserRole = 1
                        },
                        new
                        {
                            Id = new Guid("f090c653-cb8b-402e-aa64-41e48aed5316"),
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganizationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationUser");

                    b.HasData(
                        new
                        {
                            OrganizationId = new Guid("b7f080b7-9749-4aaa-8d18-0ed036c89edd"),
                            UserId = new Guid("3b9648c6-cbb1-4a06-86ad-e8c69a8fff51")
                        },
                        new
                        {
                            OrganizationId = new Guid("b7f080b7-9749-4aaa-8d18-0ed036c89edd"),
                            UserId = new Guid("42502914-030d-49eb-bea6-26bdedc64aeb")
                        });
                });

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ContentType")
                        .WithMany("BasicFields")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentType");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.HasOne("CMS.Model.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.Navigation("Sys");
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ChildEntity")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CMS.Model.ContentType", "ParentEntity")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildEntity");

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("Spaces")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Model.User", "User")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Navigation("BasicFields");

                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Navigation("OrganizationUser");

                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Navigation("OrganizationUser");
                });
#pragma warning restore 612, 618
        }
    }
}
