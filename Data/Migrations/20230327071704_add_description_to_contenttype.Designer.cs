// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230327071704_add_description_to_contenttype")]
    partial class add_description_to_contenttype
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef935913-3d49-454a-895f-ba13b7f7595c"),
                            ContentTypeId = new Guid("fe6839fd-e72b-4114-a18e-3d4eadf399a9"),
                            Name = "Creator",
                            Type = 0,
                            Value = "Regixx"
                        },
                        new
                        {
                            Id = new Guid("254a16bb-4299-4602-8ab1-12d19f50a522"),
                            ContentTypeId = new Guid("fe6839fd-e72b-4114-a18e-3d4eadf399a9"),
                            Name = "TrailerVideo",
                            Type = 4,
                            Value = "http://"
                        },
                        new
                        {
                            Id = new Guid("0a6c795c-e6b6-4248-a2ef-e61a01e37a52"),
                            ContentTypeId = new Guid("ab098d4d-7f46-4b29-9cd3-94fa57e0688a"),
                            Name = "DescriptionText",
                            Type = 0,
                            Value = "Best game ever"
                        },
                        new
                        {
                            Id = new Guid("37ede976-7f54-4757-bb87-78d717fc028c"),
                            ContentTypeId = new Guid("0bdea8ca-293e-4445-b3af-cacf951d1114"),
                            Name = "Name",
                            Type = 0,
                            Value = "Star Wars"
                        },
                        new
                        {
                            Id = new Guid("67f01731-ab80-4095-b32e-a6e1f9760f01"),
                            ContentTypeId = new Guid("0bdea8ca-293e-4445-b3af-cacf951d1114"),
                            Name = "Year",
                            Type = 1,
                            Value = "2007"
                        },
                        new
                        {
                            Id = new Guid("66fcdf6d-f417-4099-a29c-2825aaf7518a"),
                            ContentTypeId = new Guid("932d939d-2d2a-435c-b8b0-0c56f00c333b"),
                            Name = "Name",
                            Type = 0,
                            Value = "Santa Monica"
                        },
                        new
                        {
                            Id = new Guid("615066af-038e-4553-a578-b618a78ed7f5"),
                            ContentTypeId = new Guid("932d939d-2d2a-435c-b8b0-0c56f00c333b"),
                            Name = "Location",
                            Type = 0,
                            Value = "USA"
                        },
                        new
                        {
                            Id = new Guid("e738ce61-a220-4f71-ade8-bacaa9909960"),
                            ContentTypeId = new Guid("8be3a1e5-30b9-4e1d-9937-5d8b0752ad29"),
                            Name = "indField1",
                            Type = 0,
                            Value = "value-1"
                        },
                        new
                        {
                            Id = new Guid("ee5f3ec1-0e40-4f2e-8d71-e6a95995ab89"),
                            ContentTypeId = new Guid("8be3a1e5-30b9-4e1d-9937-5d8b0752ad29"),
                            Name = "indField2",
                            Type = 1,
                            Value = "4"
                        },
                        new
                        {
                            Id = new Guid("924db144-6737-4b6b-a520-4590aaf1527c"),
                            ContentTypeId = new Guid("eafed2b0-f4ed-4330-b1f2-9e63e7f91a98"),
                            Name = "ind2Field",
                            Type = 0,
                            Value = "valueee1"
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SysId");

                    b.ToTable("ContentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe6839fd-e72b-4114-a18e-3d4eadf399a9"),
                            Name = "Trailer",
                            SpaceId = new Guid("bba73054-8ed1-4e89-b0a1-df79de052184")
                        },
                        new
                        {
                            Id = new Guid("ab098d4d-7f46-4b29-9cd3-94fa57e0688a"),
                            Name = "Description",
                            SpaceId = new Guid("bba73054-8ed1-4e89-b0a1-df79de052184")
                        },
                        new
                        {
                            Id = new Guid("0bdea8ca-293e-4445-b3af-cacf951d1114"),
                            Description = "The game is ...",
                            Name = "Game",
                            SpaceId = new Guid("bba73054-8ed1-4e89-b0a1-df79de052184")
                        },
                        new
                        {
                            Id = new Guid("932d939d-2d2a-435c-b8b0-0c56f00c333b"),
                            Description = "Best publisher game award for the previous year",
                            Name = "Publisher",
                            SpaceId = new Guid("bba73054-8ed1-4e89-b0a1-df79de052184")
                        },
                        new
                        {
                            Id = new Guid("8be3a1e5-30b9-4e1d-9937-5d8b0752ad29"),
                            Description = "Description for the independent type",
                            Name = "independen 2",
                            SpaceId = new Guid("bba73054-8ed1-4e89-b0a1-df79de052184")
                        },
                        new
                        {
                            Id = new Guid("eafed2b0-f4ed-4330-b1f2-9e63e7f91a98"),
                            Description = "Some other description",
                            Name = "independent 3",
                            SpaceId = new Guid("bba73054-8ed1-4e89-b0a1-df79de052184")
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("ContentTypeReferences");

                    b.HasData(
                        new
                        {
                            ParentId = new Guid("ab098d4d-7f46-4b29-9cd3-94fa57e0688a"),
                            ChildId = new Guid("fe6839fd-e72b-4114-a18e-3d4eadf399a9")
                        },
                        new
                        {
                            ParentId = new Guid("0bdea8ca-293e-4445-b3af-cacf951d1114"),
                            ChildId = new Guid("ab098d4d-7f46-4b29-9cd3-94fa57e0688a")
                        },
                        new
                        {
                            ParentId = new Guid("0bdea8ca-293e-4445-b3af-cacf951d1114"),
                            ChildId = new Guid("932d939d-2d2a-435c-b8b0-0c56f00c333b")
                        });
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea478b4f-6786-4378-b05f-01a0beaa7e0f"),
                            Name = "Org1"
                        },
                        new
                        {
                            Id = new Guid("8849baac-20eb-4e24-a9ea-b92b204f8795"),
                            Name = "Organization 2"
                        },
                        new
                        {
                            Id = new Guid("f79e5473-fe94-4de0-891e-1a23af37dcf0"),
                            Name = "Third oorg"
                        });
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Spaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bba73054-8ed1-4e89-b0a1-df79de052184"),
                            Name = "Game shop",
                            OrganizationId = new Guid("ea478b4f-6786-4378-b05f-01a0beaa7e0f")
                        });
                });

            modelBuilder.Entity("CMS.Model.Sys", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstPublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbff476f-295c-4b69-b3e5-b89461245a86"),
                            UserRole = 0
                        },
                        new
                        {
                            Id = new Guid("b8a8d8a2-2e03-4bb0-84e5-72133610c860"),
                            UserRole = 1
                        },
                        new
                        {
                            Id = new Guid("b82c1a52-0220-455a-84b2-92f266a36cf3"),
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganizationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationUser");

                    b.HasData(
                        new
                        {
                            OrganizationId = new Guid("ea478b4f-6786-4378-b05f-01a0beaa7e0f"),
                            UserId = new Guid("dbff476f-295c-4b69-b3e5-b89461245a86")
                        },
                        new
                        {
                            OrganizationId = new Guid("ea478b4f-6786-4378-b05f-01a0beaa7e0f"),
                            UserId = new Guid("b8a8d8a2-2e03-4bb0-84e5-72133610c860")
                        });
                });

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ContentType")
                        .WithMany("BasicFields")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentType");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.HasOne("CMS.Model.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.Navigation("Sys");
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ChildEntity")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CMS.Model.ContentType", "ParentEntity")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildEntity");

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("Spaces")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Model.User", "User")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Navigation("BasicFields");

                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Navigation("OrganizationUser");

                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Navigation("OrganizationUser");
                });
#pragma warning restore 612, 618
        }
    }
}
