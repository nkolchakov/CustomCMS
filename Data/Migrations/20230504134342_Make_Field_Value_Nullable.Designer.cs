// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230504134342_Make_Field_Value_Nullable")]
    partial class Make_Field_Value_Nullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e532d73-2326-4cdb-a3e3-7f1f0818b88e"),
                            ContentTypeId = new Guid("750d40c2-4312-4d4c-924b-97e84baa9abd"),
                            Name = "Creator",
                            Type = 0,
                            Value = "Regixx"
                        },
                        new
                        {
                            Id = new Guid("ce6beb9d-2348-4ba5-af17-d413e3b648fd"),
                            ContentTypeId = new Guid("750d40c2-4312-4d4c-924b-97e84baa9abd"),
                            Name = "TrailerVideo",
                            Type = 4,
                            Value = "http://"
                        },
                        new
                        {
                            Id = new Guid("f180d1a5-d8db-4bbe-96c8-b5da9b044f5b"),
                            ContentTypeId = new Guid("033f4fb4-5800-4caf-8d1f-08e38ff9aa16"),
                            Name = "DescriptionText",
                            Type = 0,
                            Value = "Best game ever"
                        },
                        new
                        {
                            Id = new Guid("32ab1054-4d16-4e62-b49c-d584df2700ba"),
                            ContentTypeId = new Guid("d45ea086-acd6-4789-807e-8c45951f0f17"),
                            Name = "Name",
                            Type = 0,
                            Value = "Star Wars"
                        },
                        new
                        {
                            Id = new Guid("87a5d331-7534-4dd1-8918-f346f8b85353"),
                            ContentTypeId = new Guid("d45ea086-acd6-4789-807e-8c45951f0f17"),
                            Name = "Year",
                            Type = 1,
                            Value = "2007"
                        },
                        new
                        {
                            Id = new Guid("28289c6d-9c12-4ea1-844c-e02c1b828fad"),
                            ContentTypeId = new Guid("6b6dac15-b310-477d-be00-76c0633b1a3a"),
                            Name = "Name",
                            Type = 0,
                            Value = "Santa Monica"
                        },
                        new
                        {
                            Id = new Guid("74fca307-7475-4f9c-bdcd-1aa803fb9a5b"),
                            ContentTypeId = new Guid("6b6dac15-b310-477d-be00-76c0633b1a3a"),
                            Name = "Location",
                            Type = 0,
                            Value = "USA"
                        },
                        new
                        {
                            Id = new Guid("0d0aa401-142a-4c6e-91d6-3564d85bfcad"),
                            ContentTypeId = new Guid("1e496d97-85e3-4023-93b3-a74950251a16"),
                            Name = "indField1",
                            Type = 0,
                            Value = "value-1"
                        },
                        new
                        {
                            Id = new Guid("0aa1356c-7475-46cf-a8eb-1d64174f0bcd"),
                            ContentTypeId = new Guid("1e496d97-85e3-4023-93b3-a74950251a16"),
                            Name = "indField2",
                            Type = 1,
                            Value = "4"
                        },
                        new
                        {
                            Id = new Guid("5c2bb8c1-d2bd-475f-ab3e-7b67bb373c2d"),
                            ContentTypeId = new Guid("0d2f8f62-724a-4745-8fdf-efdd8b2ee358"),
                            Name = "ind2Field",
                            Type = 0,
                            Value = "valueee1"
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SysId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SysId");

                    b.ToTable("ContentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("750d40c2-4312-4d4c-924b-97e84baa9abd"),
                            Name = "Trailer",
                            SpaceId = new Guid("ebce5f4a-f21a-4118-b67e-e936371604e2")
                        },
                        new
                        {
                            Id = new Guid("033f4fb4-5800-4caf-8d1f-08e38ff9aa16"),
                            Name = "Description",
                            SpaceId = new Guid("ebce5f4a-f21a-4118-b67e-e936371604e2")
                        },
                        new
                        {
                            Id = new Guid("d45ea086-acd6-4789-807e-8c45951f0f17"),
                            Description = "The game is ...",
                            Name = "Game",
                            SpaceId = new Guid("ebce5f4a-f21a-4118-b67e-e936371604e2")
                        },
                        new
                        {
                            Id = new Guid("6b6dac15-b310-477d-be00-76c0633b1a3a"),
                            Description = "Best publisher game award for the previous year",
                            Name = "Publisher",
                            SpaceId = new Guid("ebce5f4a-f21a-4118-b67e-e936371604e2")
                        },
                        new
                        {
                            Id = new Guid("1e496d97-85e3-4023-93b3-a74950251a16"),
                            Description = "Description for the independent type",
                            Name = "independen 2",
                            SpaceId = new Guid("ebce5f4a-f21a-4118-b67e-e936371604e2")
                        },
                        new
                        {
                            Id = new Guid("0d2f8f62-724a-4745-8fdf-efdd8b2ee358"),
                            Description = "Some other description",
                            Name = "independent 3",
                            SpaceId = new Guid("ebce5f4a-f21a-4118-b67e-e936371604e2")
                        });
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("ContentTypeReferences");

                    b.HasData(
                        new
                        {
                            ParentId = new Guid("033f4fb4-5800-4caf-8d1f-08e38ff9aa16"),
                            ChildId = new Guid("750d40c2-4312-4d4c-924b-97e84baa9abd")
                        },
                        new
                        {
                            ParentId = new Guid("d45ea086-acd6-4789-807e-8c45951f0f17"),
                            ChildId = new Guid("033f4fb4-5800-4caf-8d1f-08e38ff9aa16")
                        },
                        new
                        {
                            ParentId = new Guid("d45ea086-acd6-4789-807e-8c45951f0f17"),
                            ChildId = new Guid("6b6dac15-b310-477d-be00-76c0633b1a3a")
                        });
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d872867-151b-4517-bf36-a59ac5122c48"),
                            Name = "Org1"
                        },
                        new
                        {
                            Id = new Guid("060b40d8-285b-43fe-90d6-cb625179e5ff"),
                            Name = "Organization 2"
                        },
                        new
                        {
                            Id = new Guid("907c000c-3aff-44de-838a-8a3b819ce201"),
                            Name = "Third oorg"
                        });
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Spaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebce5f4a-f21a-4118-b67e-e936371604e2"),
                            Name = "Game shop",
                            OrganizationId = new Guid("2d872867-151b-4517-bf36-a59ac5122c48")
                        });
                });

            modelBuilder.Entity("CMS.Model.Sys", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstPublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f6e5c76-60e6-4408-a53e-27ac7b917830"),
                            UserRole = 0
                        },
                        new
                        {
                            Id = new Guid("0f00f8af-1748-42af-a4f3-255c5a581c33"),
                            UserRole = 1
                        },
                        new
                        {
                            Id = new Guid("c3a1a6f8-9742-4367-8031-498b52b00b3f"),
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("Models.ListItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicFieldId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicFieldId");

                    b.ToTable("ListItem");
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganizationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationUser");

                    b.HasData(
                        new
                        {
                            OrganizationId = new Guid("2d872867-151b-4517-bf36-a59ac5122c48"),
                            UserId = new Guid("1f6e5c76-60e6-4408-a53e-27ac7b917830")
                        },
                        new
                        {
                            OrganizationId = new Guid("2d872867-151b-4517-bf36-a59ac5122c48"),
                            UserId = new Guid("0f00f8af-1748-42af-a4f3-255c5a581c33")
                        });
                });

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ContentType")
                        .WithMany("BasicFields")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentType");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.HasOne("CMS.Model.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.Navigation("Sys");
                });

            modelBuilder.Entity("CMS.Model.ContentTypeReferences", b =>
                {
                    b.HasOne("CMS.Model.ContentType", "ChildEntity")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CMS.Model.ContentType", "ParentEntity")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildEntity");

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("CMS.Model.Space", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("Spaces")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Models.ListItem", b =>
                {
                    b.HasOne("CMS.Model.BasicField", "BasicField")
                        .WithMany("ListItems")
                        .HasForeignKey("BasicFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicField");
                });

            modelBuilder.Entity("Models.OrganizationUser", b =>
                {
                    b.HasOne("CMS.Model.Organization", "Organization")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Model.User", "User")
                        .WithMany("OrganizationUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMS.Model.BasicField", b =>
                {
                    b.Navigation("ListItems");
                });

            modelBuilder.Entity("CMS.Model.ContentType", b =>
                {
                    b.Navigation("BasicFields");

                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("CMS.Model.Organization", b =>
                {
                    b.Navigation("OrganizationUser");

                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("CMS.Model.User", b =>
                {
                    b.Navigation("OrganizationUser");
                });
#pragma warning restore 612, 618
        }
    }
}
